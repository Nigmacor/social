# Generated by Django 2.2.6 on 2020-04-21 13:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shops.Category')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название для владельца и персонала', max_length=92)),
                ('slug', models.SlugField(max_length=92, unique=True)),
                ('title', models.CharField(help_text='Название для клиентов', max_length=92)),
                ('contact_email', models.EmailField(default='contact@yourstore.com', help_text='Контактный емайл для ЭТОГО магазина', max_length=254)),
                ('contact_phone', models.CharField(default='', help_text='Контактный телефон для ЭТОГО магазина', max_length=128)),
                ('template_prefix', models.SlugField(help_text='obana.ru/<base_domain>/...', max_length=92, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shops', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=50, verbose_name='название')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('short_description', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('product_information', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('county', models.PositiveIntegerField(verbose_name='Количество на складе')),
                ('buy_counter', models.PositiveIntegerField(default=0, verbose_name='Покупок')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Просмотров')),
                ('available', models.BooleanField(default=True, verbose_name='Доступно')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Опубликовано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Изменено')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shops.Category')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shops.Shop')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['-price', 'buy_counter', 'views'],
                'index_together': {('id', 'slug')},
            },
        ),
    ]
